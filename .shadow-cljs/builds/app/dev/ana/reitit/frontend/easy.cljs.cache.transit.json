["^ ","~:output",["^ ","~:js","goog.provide('reitit.frontend.easy');\nif((typeof reitit !== 'undefined') && (typeof reitit.frontend !== 'undefined') && (typeof reitit.frontend.easy !== 'undefined') && (typeof reitit.frontend.easy.history !== 'undefined')){\n} else {\nreitit.frontend.easy.history = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\n/**\n * This registers event listeners on HTML5 history and hashchange events.\n * \n *   Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n *   Figwheel or similar development workflow.\n * \n *   Parameters:\n *   - router         The Reitit router.\n *   - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n * \n *   Options:\n *   - :use-fragment  (default true) If true, onhashchange and location hash are used to store current route.\n * \n *   Options (Html5History):\n *   - :ignore-anchor-click?  Function (router, event, anchor element, uri) which will be called to\n *                         check if the anchor click event should be ignored.\n *                         To extend built-in check, you can call `reitit.frontend.history/ignore-anchor-click?`\n *                         function, which will ignore clicks if the href matches route tree.\n */\nreitit.frontend.easy.start_BANG_ = (function reitit$frontend$easy$start_BANG_(router,on_navigate,opts){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reitit.frontend.easy.history,reitit.frontend.history.stop_BANG_);\n\nreturn reitit.frontend.history.start_BANG_.cljs$core$IFn$_invoke$arity$3(router,(function reitit$frontend$easy$start_BANG__$_rfe_on_navigate(m,this$){\nif((cljs.core.deref(reitit.frontend.easy.history) == null)){\ncljs.core.reset_BANG_(reitit.frontend.easy.history,this$);\n} else {\n}\n\nreturn (on_navigate.cljs$core$IFn$_invoke$arity$2 ? on_navigate.cljs$core$IFn$_invoke$arity$2(m,this$) : on_navigate.call(null,m,this$));\n}),opts);\n});\n/**\n * Generate a URL for a route defined by name, with given path-params and query-params.\n * \n *   The URL is formatted using Reitit frontend history handler, so using it with\n *   anchor element href will correctly trigger route change event.\n * \n *   Note: currently collections in query-parameters are encoded as field-value\n *   pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n *   differently, convert the collections to strings first.\n */\nreitit.frontend.easy.href = (function reitit$frontend$easy$href(var_args){\nvar G__43764 = arguments.length;\nswitch (G__43764) {\ncase 1:\nreturn reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$1 = (function (name){\nreturn reitit.frontend.history.href.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,null,null);\n}));\n\n(reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$2 = (function (name,path_params){\nreturn reitit.frontend.history.href.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,null);\n}));\n\n(reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$3 = (function (name,path_params,query_params){\nreturn reitit.frontend.history.href.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,query_params);\n}));\n\n(reitit.frontend.easy.href.cljs$lang$maxFixedArity = 3);\n\n/**\n * Updates the browser location and pushes new entry to the history stack using\n *   URL built from a route defined by name, with given path-params and\n *   query-params.\n * \n *   Will also trigger on-navigate callback on Reitit frontend History handler.\n * \n *   Note: currently collections in query parameters are encoded as field-value\n *   pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n *   differently, convert the collections to strings first.\n * \n *   See also:\n *   https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n */\nreitit.frontend.easy.push_state = (function reitit$frontend$easy$push_state(var_args){\nvar G__43771 = arguments.length;\nswitch (G__43771) {\ncase 1:\nreturn reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$1 = (function (name){\nreturn reitit.frontend.history.push_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,null,null);\n}));\n\n(reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$2 = (function (name,path_params){\nreturn reitit.frontend.history.push_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,null);\n}));\n\n(reitit.frontend.easy.push_state.cljs$core$IFn$_invoke$arity$3 = (function (name,path_params,query_params){\nreturn reitit.frontend.history.push_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,query_params);\n}));\n\n(reitit.frontend.easy.push_state.cljs$lang$maxFixedArity = 3);\n\n/**\n * Updates the browser location and replaces latest entry in the history stack\n *   using URL built from a route defined by name, with given path-params and\n *   query-params.\n * \n *   Will also trigger on-navigate callback on Reitit frontend History handler.\n * \n *   Note: currently collections in query-parameters are encoded as field-value\n *   pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n *   differently, convert the collections to strings first.\n * \n *   See also:\n *   https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n */\nreitit.frontend.easy.replace_state = (function reitit$frontend$easy$replace_state(var_args){\nvar G__43773 = arguments.length;\nswitch (G__43773) {\ncase 1:\nreturn reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$1 = (function (name){\nreturn reitit.frontend.history.replace_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,null,null);\n}));\n\n(reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$2 = (function (name,path_params){\nreturn reitit.frontend.history.replace_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,null);\n}));\n\n(reitit.frontend.easy.replace_state.cljs$core$IFn$_invoke$arity$3 = (function (name,path_params,query_params){\nreturn reitit.frontend.history.replace_state.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(reitit.frontend.easy.history),name,path_params,query_params);\n}));\n\n(reitit.frontend.easy.replace_state.cljs$lang$maxFixedArity = 3);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Easy wrapper over reitit.frontend.history,\n  handling the state. Only one router can be active\n  at a time.","~:file","reitit/frontend/easy.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",25],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$reitit.frontend.easy","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reitit.frontend.history","^Q","~$rfh","^Q","~$cljs.core","^S","~$goog","^T"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^K","Easy wrapper over reitit.frontend.history,\n  handling the state. Only one router can be active\n  at a time.",["^Z",["^V",["^Q","~:as","^R"]]]]],"~:flags",["^ ","^V",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^Q"]],"^N","^K","~:resource-id",["~:shadow.build.classpath/resource","reitit/frontend/easy.cljs"],"~:compiled-at",1743821619693,"^L",["^ ","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"~:resource-name","reitit/frontend/easy.cljs","~:warnings",[],"~:source","(ns reitit.frontend.easy\n  \"Easy wrapper over reitit.frontend.history,\n  handling the state. Only one router can be active\n  at a time.\"\n  (:require [reitit.frontend.history :as rfh]))\n\n(defonce history (atom nil))\n\n;; Doc-strings from reitit.frontend.history remember to update both!\n;; Differences:\n;; This one automatically removes previous event listeners.\n\n(defn ^{:see-also [\"reitit.frontend.history/start!\"]}\n  start!\n  \"This registers event listeners on HTML5 history and hashchange events.\n\n  Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n  Figwheel or similar development workflow.\n\n  Parameters:\n  - router         The Reitit router.\n  - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n\n  Options:\n  - :use-fragment  (default true) If true, onhashchange and location hash are used to store current route.\n\n  Options (Html5History):\n  - :ignore-anchor-click?  Function (router, event, anchor element, uri) which will be called to\n                           check if the anchor click event should be ignored.\n                           To extend built-in check, you can call `reitit.frontend.history/ignore-anchor-click?`\n                           function, which will ignore clicks if the href matches route tree.\"\n  [router on-navigate opts]\n  ;; Stop and set to nil.\n  (swap! history rfh/stop!)\n  ; ;; Store the reference to History object in navigate callback, before calling user\n  ; ;; callback, so that user function can call rfe functions.\n  (rfh/start! router (fn rfe-on-navigate [m this]\n                       (when (nil? @history)\n                         (reset! history this))\n                       (on-navigate m this))\n              opts))\n\n(defn\n  ^{:see-also [\"reitit.frontend.history/href\"]}\n  href\n  \"Generate a URL for a route defined by name, with given path-params and query-params.\n\n  The URL is formatted using Reitit frontend history handler, so using it with\n  anchor element href will correctly trigger route change event.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \\\"?a=1&a=2\\\", if you want to encode them\n  differently, convert the collections to strings first.\"\n  ([name]\n   (rfh/href @history name nil nil))\n  ([name path-params]\n   (rfh/href @history name path-params nil))\n  ([name path-params query-params]\n   (rfh/href @history name path-params query-params)))\n\n(defn\n  ^{:see-also [\"reitit.frontend.history/push-state\"]}\n  push-state\n  \"Updates the browser location and pushes new entry to the history stack using\n  URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query parameters are encoded as field-value\n  pairs separated by &, i.e. \\\"?a=1&a=2\\\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\"\n  ([name]\n   (rfh/push-state @history name nil nil))\n  ([name path-params]\n   (rfh/push-state @history name path-params nil))\n  ([name path-params query-params]\n   (rfh/push-state @history name path-params query-params)))\n\n(defn\n  ^{:see-also [\"reitit.frontend.history/replace-state\"]}\n  replace-state\n  \"Updates the browser location and replaces latest entry in the history stack\n  using URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \\\"?a=1&a=2\\\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\"\n  ([name]\n   (rfh/replace-state @history name nil nil))\n  ([name path-params]\n   (rfh/replace-state @history name path-params nil))\n  ([name path-params query-params]\n   (rfh/replace-state @history name path-params query-params)))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reitit","js/reitit.frontend","js/reitit.frontend.easy","js/reitit.frontend.easy.history","reitit.frontend.easy/history","cljs.core.atom","reitit.frontend.easy/start!","router","on-navigate","opts","cljs.core.swap_BANG_","reitit.frontend.history/stop!","reitit.frontend.history.start_BANG_","m","this","cljs.core/deref","cljs.core/reset!","var_args","G__43764","reitit.frontend.easy/href","js/Error","name","reitit.frontend.history.href","path-params","query-params","G__43771","reitit.frontend.easy/push-state","reitit.frontend.history.push_state","G__43773","reitit.frontend.easy/replace-state","reitit.frontend.history.replace_state"]],"~:used-vars",["^I",["~$reitit.frontend.easy/start!","~$reitit.frontend.easy/href","~$reitit.frontend.history/start!","~$js/reitit.frontend","~$reitit.frontend.history/href","~$cljs.core/deref","~$cljs.core/atom","~$reitit.frontend.easy/history","~$cljs.core/reset!","~$js/reitit.frontend.easy.history","~$reitit.frontend.history/push-state","~$cljs.core/swap!","~$reitit.frontend.easy/replace-state","~$reitit.frontend.easy/push-state","~$js/reitit.frontend.easy","~$reitit.frontend.history/replace-state","~$reitit.frontend.history/stop!","~$js/reitit","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^15","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^15","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^15","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^15","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^20","^21","~$goog.asserts","^1[","^22","^23"]]],["^15","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^1["]]],["^15","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26"]]],["^15","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^20","~$goog.reflect","^1["]]],["^15","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^15","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","reitit/frontend/easy.cljs"],["ce8f84ae1daab0fce8bccc87e41f99fbff8a3083","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^Q"]]],["^15","reitit/exception.cljc"],["cafc05f77d78f0611e589a4109a1419664e9eb54","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","~$clojure.string"]]],["^15","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^20","^1["]]],["^15","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^15","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26"]]],"~:SHADOW-TIMESTAMP",[1743820537000,1743820537000,1696986129000],["^15","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","^2>"]]],["^15","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.events.ListenableKey"]]],["^15","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","~$goog.fs.blob","^27","~$goog.html.SafeScript","~$goog.html.trustedtypes","^29","^2:"]]],["^15","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.array","~$goog.events.Listener","~$goog.object"]]],["^15","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^29","~$goog.html.SafeUrl","^2:","^26","^1["]]],["^15","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2K","~$goog.html.SafeStyle","^2P","^28","~$goog.html.uncheckedconversions","^29","^1["]]],["^15","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.dom.TagName","^26","~$goog.dom.element"]]],["^15","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S"]]],["^15","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^29","^2K","^2U","~$goog.html.SafeStyleSheet","^2P","^2W","^28","^2:","^26","^2;","^2M","^2O","^1[","~$goog.dom.tags","^2L"]]],["^15","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2O"]]],["^15","reitit/frontend.cljs"],["ce8f84ae1daab0fce8bccc87e41f99fbff8a3083","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","~$clojure.set","~$reitit.coercion","~$reitit.core","~$goog.Uri","~$goog.Uri.QueryData"]]],["^15","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2M","^1[","^20"]]],["^15","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2M","^26","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^21"]]],["^15","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","reitit/trie.cljc"],["cafc05f77d78f0611e589a4109a1419664e9eb54","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^2D","~$reitit.exception"]]],["^15","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2A","^25"]]],["^15","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",[]]],["^15","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2M","^2O"]]],["^15","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^37","~$goog.string.StringBuffer"]]],["^15","meta_merge/core.cljc"],["28cbe836fdf7de02801fe0bdbb30eb2fd842e8d9","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^2["]]],["^15","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26"]]],["^15","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.dom.safe","^2V","^29","^1["]]],["^15","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^1[","^23"]]],["^15","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2M","~$goog.debug.errorcontext"]]],["^15","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.flags"]]],["^15","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^35","^2W"]]],["^15","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","^2T","^2K","^2U","^2Y","^2P","^28","^29","^1["]]],["^15","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.Disposable","~$goog.events.EventId"]]],["^15","reitit/core.cljc"],["cafc05f77d78f0611e589a4109a1419664e9eb54","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^3<","~$reitit.impl","~$reitit.trie"]]],["^15","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.math.Long","~$goog.math.Integer","^37","^2O","^2M","^32","^3="]]],["^15","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^29","^2:","^2L","^26"]]],["^15","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^29","^2U","^2:","^2O","^26","^1["]]],["^15","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","~$goog.debug","~$goog.events.Event","~$goog.events.EventType","^2>","^25"]]],["^15","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2>"]]],["^15","reitit/frontend/history.cljs"],["ce8f84ae1daab0fce8bccc87e41f99fbff8a3083","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","~$goog.events","^31","~$reitit.frontend","^32"]]],["^15","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S"]]],["^15","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","^37"]]],["^15","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^26","^2:"]]],["^15","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^2F"]]],["^15","reitit/impl.cljc"],["cafc05f77d78f0611e589a4109a1419664e9eb54","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","^2[","^2D","~$meta-merge.core","^3<","^3D"]]],["^15","reitit/coercion.cljc"],["cafc05f77d78f0611e589a4109a1419664e9eb54","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T","^S","~$clojure.walk","^3C"]]],["^15","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]],["^15","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^1V",["^ ","^1W",null,"^1X",["^I",[]],"^1Y",["^T"]]]]],"~:clj-info",["^ ","jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/metosin/reitit-core/0.6.0/reitit-core-0.6.0.jar!/reitit/trie.cljc",1715780390000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/metosin/reitit-core/0.6.0/reitit-core-0.6.0.jar!/reitit/exception.cljc",1715780390000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/meta-merge/meta-merge/1.0.0/meta-merge-1.0.0.jar!/meta_merge/core.cljc",1705439088000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/metosin/reitit-core/0.6.0/reitit-core-0.6.0.jar!/reitit/impl.cljc",1715780390000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1686693561000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1741218981000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1696986129000,"jar:file:/Users/kingjames/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1696986129000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Easy wrapper over reitit.frontend.history,\n  handling the state. Only one router can be active\n  at a time.","^7","reitit/frontend/easy.cljs","^8",1,"^9",5,"^:",1,"^;",25],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^L",["^ "],"^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"^U",["^I",["^V"]],"~:shadow/js-access-global",["^I",["Error"]],"^W",null,"~:defs",["^ ","~$history",["^ ","^J","^1H","^7","reitit/frontend/easy.cljs","^8",7,"^9",1,"^:",7,"^;",17,"^5",["^ ","^7","reitit/frontend/easy.cljs","^8",7,"^9",10,"^:",7,"^;",17],"~:tag","~$cljs.core/Atom"],"~$start!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","reitit/frontend/easy.cljs","^8",14,"^9",3,"^:",14,"^;",9,"~:see-also",["reitit.frontend.history/start!"],"~:arglists",["^Z",["~$quote",["^Z",[["~$router","~$on-navigate","~$opts"]]]]],"^6","This registers event listeners on HTML5 history and hashchange events.\n\n  Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n  Figwheel or similar development workflow.\n\n  Parameters:\n  - router         The Reitit router.\n  - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n\n  Options:\n  - :use-fragment  (default true) If true, onhashchange and location hash are used to store current route.\n\n  Options (Html5History):\n  - :ignore-anchor-click?  Function (router, event, anchor element, uri) which will be called to\n                           check if the anchor click event should be ignored.\n                           To extend built-in check, you can call `reitit.frontend.history/ignore-anchor-click?`\n                           function, which will ignore clicks if the href matches route tree."],"^J","^1A","^7","reitit/frontend/easy.cljs","^;",9,"~:method-params",["^Z",[["^4P","^4Q","^4R"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^9",1,"~:variadic?",false,"^8",13,"~:ret-tag","~$any","^:",14,"~:max-fixed-arity",3,"~:fn-var",true,"^4N",["^Z",["^4O",["^Z",[["^4P","^4Q","^4R"]]]]],"^4M",["reitit.frontend.history/start!"],"^6","This registers event listeners on HTML5 history and hashchange events.\n\n  Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n  Figwheel or similar development workflow.\n\n  Parameters:\n  - router         The Reitit router.\n  - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n\n  Options:\n  - :use-fragment  (default true) If true, onhashchange and location hash are used to store current route.\n\n  Options (Html5History):\n  - :ignore-anchor-click?  Function (router, event, anchor element, uri) which will be called to\n                           check if the anchor click event should be ignored.\n                           To extend built-in check, you can call `reitit.frontend.history/ignore-anchor-click?`\n                           function, which will ignore clicks if the href matches route tree."],"~$href",["^ ","^4L",null,"^5",["^ ","^7","reitit/frontend/easy.cljs","^;",7,"~:top-fn",["^ ","^4V",false,"~:fixed-arity",3,"^4Y",3,"^4S",[["~$name"],["^52","~$path-params"],["^52","^53","~$query-params"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^9",3,"^8",45,"^:",45,"^4N",["^Z",["^4O",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]]]],"^4M",["reitit.frontend.history/href"],"^6","Generate a URL for a route defined by name, with given path-params and query-params.\n\n  The URL is formatted using Reitit frontend history handler, so using it with\n  anchor element href will correctly trigger route change event.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first."],"^J","^1B","^7","reitit/frontend/easy.cljs","^;",7,"^50",["^ ","^4V",false,"^51",3,"^4Y",3,"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4T",null,"^51",3,"^4U",["^Z",[null,null,null]],"^9",1,"^4V",false,"~:methods",[["^ ","^51",1,"^4V",false,"^4I","^4X"],["^ ","^51",2,"^4V",false,"^4I","^4X"],["^ ","^51",3,"^4V",false,"^4I","^4X"]],"^8",43,"^:",45,"^4Y",3,"^4Z",true,"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4M",["reitit.frontend.history/href"],"^6","Generate a URL for a route defined by name, with given path-params and query-params.\n\n  The URL is formatted using Reitit frontend history handler, so using it with\n  anchor element href will correctly trigger route change event.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first."],"~$push-state",["^ ","^4L",null,"^5",["^ ","^7","reitit/frontend/easy.cljs","^;",13,"^50",["^ ","^4V",false,"^51",3,"^4Y",3,"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^9",3,"^8",63,"^:",63,"^4N",["^Z",["^4O",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]]]],"^4M",["reitit.frontend.history/push-state"],"^6","Updates the browser location and pushes new entry to the history stack using\n  URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/pushState"],"^J","^1N","^7","reitit/frontend/easy.cljs","^;",13,"^50",["^ ","^4V",false,"^51",3,"^4Y",3,"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4T",null,"^51",3,"^4U",["^Z",[null,null,null]],"^9",1,"^4V",false,"^55",[["^ ","^51",1,"^4V",false,"^4I","^4X"],["^ ","^51",2,"^4V",false,"^4I","^4X"],["^ ","^51",3,"^4V",false,"^4I","^4X"]],"^8",61,"^:",63,"^4Y",3,"^4Z",true,"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4M",["reitit.frontend.history/push-state"],"^6","Updates the browser location and pushes new entry to the history stack using\n  URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/pushState"],"~$replace-state",["^ ","^4L",null,"^5",["^ ","^7","reitit/frontend/easy.cljs","^;",16,"^50",["^ ","^4V",false,"^51",3,"^4Y",3,"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^9",3,"^8",85,"^:",85,"^4N",["^Z",["^4O",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]]]],"^4M",["reitit.frontend.history/replace-state"],"^6","Updates the browser location and replaces latest entry in the history stack\n  using URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState"],"^J","^1M","^7","reitit/frontend/easy.cljs","^;",16,"^50",["^ ","^4V",false,"^51",3,"^4Y",3,"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4U",["^Z",[null,null,null]]],"^4S",[["^52"],["^52","^53"],["^52","^53","^54"]],"^4T",null,"^51",3,"^4U",["^Z",[null,null,null]],"^9",1,"^4V",false,"^55",[["^ ","^51",1,"^4V",false,"^4I","^4X"],["^ ","^51",2,"^4V",false,"^4I","^4X"],["^ ","^51",3,"^4V",false,"^4I","^4X"]],"^8",83,"^:",85,"^4Y",3,"^4Z",true,"^4N",["^Z",[["^52"],["^52","^53"],["^52","^53","^54"]]],"^4M",["reitit.frontend.history/replace-state"],"^6","Updates the browser location and replaces latest entry in the history stack\n  using URL built from a route defined by name, with given path-params and\n  query-params.\n\n  Will also trigger on-navigate callback on Reitit frontend History handler.\n\n  Note: currently collections in query-parameters are encoded as field-value\n  pairs separated by &, i.e. \"?a=1&a=2\", if you want to encode them\n  differently, convert the collections to strings first.\n\n  See also:\n  https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState"]],"^X",["^ ","^S","^S"],"^11",["^ ","^V",["^I",[]]],"^12",["^ "],"^13",["^T","^S","^Q"]],"^N","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^1U",[["^5:","~:static-fns"],true,["^5:","~:shadow-tweaks"],null,["^5:","~:source-map-inline"],null,["^5:","~:elide-asserts"],false,["^5:","~:optimize-constants"],null,["^5:","^18"],null,["^5:","~:external-config"],null,["^5:","~:tooling-config"],null,["^5:","~:emit-constants"],null,["^5:","~:load-tests"],null,["^5:","~:form-size-threshold"],null,["^5:","~:global-goog-object&array"],null,["^5:","~:data-readers"],null,["^5:","~:infer-externs"],"~:auto",["^5:","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5:","~:fn-invoke-direct"],null,["^5:","~:source-map"],"/dev/null"]]]